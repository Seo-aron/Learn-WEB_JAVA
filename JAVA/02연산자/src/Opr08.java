
//예제. 증가연산자 ++  감소연산자 --의 선행처리와 후행처리

public class Opr08 {
	public static void main(String[] args) {
		
		int a=10, b=10;
		
		//++증가연산자가 변수명a앞에 붙으면 선행처리 이므로
		//a변수값이 1증가된 후에 
		//출력되어 11이 출력됩니다.
		System.out.println(++a);//11
		//다시 한번더 a변수값을 출력해도 그대로 11이 출력됩니다.
		System.out.println(a);//11
		
		//10을 먼저 출력 후 b++를 통해 b변수값 1증가 시켜 11로 만듬
		System.out.println(b++);//10
		System.out.println(b);//1증가된 b변수의 값을 출력하면 11이 출력됨
		
		//a = 11, b = 11
		
		//a,b변수 값을 모두 10으로 저장하고 싶다
		a=b=10;
		//연산순서
		//1.  b변수에 10을 저장
		//2.  a변수에 b변수에 저장된 10을 다시 저장
		//결론 : a,b변수에 저장된 값은 모두 10이 됨
		
		//a = 10,   b = 10		
		int c;
		//변수a의 값10이 1증가되어 11로 만들어 주고
		//11을 c변수에 대입하므로 c변수에 저장된 값은 11이고 
		//a변수에 저장된 값은 1증가한 11이 됩니다.
		c = ++a;
		System.out.println("c : " + c);  // 11
		System.out.println("a : " + a);  // 11
		
		//a = 11, b = 10, c = 11
		
		//변수b의 값이 10인 상태에서 ++가 b변수명 뒤에 붙었으므로
		//후행처리 합니다.
		//그러므로 b변수에 저장된 10을 먼저 c변수에 대입해서 저장시키므로
		//c변수의 값은 10이 되고
		//b변수는 나중에 ++ 할것이니 10에서 11이 됩니다.
		c = b++;
//		11= 10++;
		System.out.println("c : " + c); //10
		System.out.println("b : " + b); //11
		
//		c? 10
//		b? 11		
		
		
		
		

	}

}





